---
title: "DTU from Illumina (salmon quants)"
format: html
self-contained: true
editor_options: 
  chunk_output_type: console
---

## DGE analysis

Here, we will run a preliminary vanilla `DRIMSeq` analysis for the Illumina data from Gloria and Madison, in order to get some quick DTU results.

## Load packages

```{r warning=FALSE, message=FALSE}
library(tidyr)
library(dplyr)
library(readr)
library(tibble)
library(DRIMSeq)
library(pheatmap)
library(SingleCellExperiment)
```

## Read in the transcript-level data and aggregate it

Here, we read in the transcript counts, and organize transcript and gene identifiers.

```{r}

x <- readRDS("data/edgeR_dge.rds")

md <- data.frame(sample_id = paste0("Day",c(0,0,0,5,5,5),"-",c(1:3,1:3)),
                 group = rep(c("day0","day5"), each=3))
md

st <- x$st

m <- match(md$sample_id, colData(st)$label)
st <- st[,m]
rs <- rowSums(counts(st))>0
st <- st[rs,]

dim(st)

tcounts <- counts(st)
colnames(tcounts) <- md$sample_id


trans_counts <- data.frame(gene_id = rowData(st)$gene_id,
                           feature_id = rowData(st)$tx_id,
                           tcounts, check.names = FALSE)

head(trans_counts, 2)


```


## Make an `dmDSdata` object and do some filtering


```{r, fig.width=8, fig.height=6}


d <- dmDSdata(counts = trans_counts, samples = md)
d

head(counts(d))

plotData(d)


d <- dmFilter(d, min_samps_gene_expr = 3, min_samps_feature_expr = 3,
              min_gene_expr = 100, min_feature_expr = 20)

design_full <- model.matrix(~ group, data = DRIMSeq::samples(d))
design_full


d <- dmPrecision(d, design = design_full)

d <- dmFit(d, design = design_full, verbose = 1)

d <- dmTest(d, coef = "groupday5", verbose = 1)

res <- results(d) %>% left_join(rowData(st) %>% 
                                  as.data.frame %>% 
                                  select(gene_id, gene_name),
                                multiple = 'first')
res %>% arrange(adj_pvalue) %>% head(20)

sum(res$adj_pvalue < .05, na.rm = TRUE)

# SLC29A1
plotProportions(d, gene_id = "ENSG00000112759.19", group_variable = "group")
trans_counts %>% filter(gene_id=="ENSG00000112759.19")

# ERG
plotProportions(d, gene_id = "ENSG00000157554.20", group_variable = "group")
trans_counts %>% filter(gene_id=="ENSG00000157554.20")

plotProportions(d, gene_id = "ENSG00000081051.8", group_variable = "group")
trans_counts %>% filter(gene_id=="ENSG00000081051.8")


out <- trans_counts %>% left_join(res)


# write statistics to table
write.table(out, "21062023_DTU_gloria_illumina.tsv", sep = "\t",
            row.names = FALSE, quote = FALSE)


```



## `sessionInfo()`

```{r}
sessionInfo()
```


