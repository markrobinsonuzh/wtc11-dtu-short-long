---
title: "Looking at SIRVs on the Illumina data"
format: html
self-contained: true
editor_options: 
  chunk_output_type: console
---

## SIRV analysis

SIRV info was downloaded from [Lexogen](https://www.lexogen.com/sirvs/download/) .. in particular, these:

```
SIRV_Set4_Norm_sequence-design-overview_20210507a.xlsx
SIRV_Set1_Lot_No._00141_sequence-design-overview_20210507a.xlsx
```

## Load packages

```{r warning=FALSE, message=FALSE}
library(readxl)
library(dplyr)
# library(tidyr)
# library(readr)
# library(tibble)
# library(DRIMSeq)
# library(pheatmap)

```

## Read in the SIRV info

Here, we read in the SIRV files and parse out the quantitative parts.

```{r}


re <- read_excel("data/SIRV_Set1_Lot_No._00141_sequence-design-overview_20210507a.xlsx", 
           skip = 6, col_names = FALSE, n_max = 100) %>% 
  transmute(transcript_id = `...6`,
            e0 = `...10`, e1 = `...11`, e2 = `...12`)


# trans_file <- "data/20230606_wtc11_diff_combined_transcript_reads.tsv"
trans_file <- "data/20230606_wtc11_diff_combined_transcript_reads_11_samples_min.tsv"

trans_counts <- read_tsv(trans_file) %>% 
  replace(is.na(.), 0) %>%
  as.data.frame %>%
  transmute(gene_id = associated_gene,
         feature_id = isoform,
         day0_1 = `0-1`,
         day0_2 = `0-2`,
         day0_3 = `0-3`,
         day5_1 = `5-1`,
         day5_2 = `5-2`,
         day5_3 = `5-3`)

md <- data.frame(sample_id = paste0("day",c(0,0,0,5,5,5),"_",c(1:3,1:3)),
                 group = rep(c("day0","day5"), each=3))
md

```



## Read in the transcript-level data and aggregate it

Here, we read in the transcript counts, and aggegrate them at the gene-level.

```{r}
# trans_file <- "data/20230606_wtc11_diff_combined_transcript_reads.tsv"
trans_file <- "data/20230606_wtc11_diff_combined_transcript_reads_11_samples_min.tsv"

trans_counts <- read_tsv(trans_file) %>% 
  replace(is.na(.), 0) %>%
  as.data.frame %>%
  transmute(gene_id = associated_gene,
         feature_id = isoform,
         day0_1 = `0-1`,
         day0_2 = `0-2`,
         day0_3 = `0-3`,
         day5_1 = `5-1`,
         day5_2 = `5-2`,
         day5_3 = `5-3`)

md <- data.frame(sample_id = paste0("day",c(0,0,0,5,5,5),"_",c(1:3,1:3)),
                 group = rep(c("day0","day5"), each=3))
md

```


## Make an `dmDSdata` object and do some filtering


```{r, fig.width=8, fig.height=6}


d <- dmDSdata(counts = trans_counts, samples = md)
d

head(counts(d))

plotData(d)


d <- dmFilter(d, min_samps_gene_expr = 3, min_samps_feature_expr = 3,
              min_gene_expr = 100, min_feature_expr = 20)

design_full <- model.matrix(~ group, data = samples(d))
design_full


d <- dmPrecision(d, design = design_full)

d <- dmFit(d, design = design_full, verbose = 1)

d <- dmTest(d, coef = "groupday5", verbose = 1)

res <- results(d)
res %>% arrange(adj_pvalue) %>% head(20)

sum(res$adj_pvalue < .05, na.rm = TRUE)


plotProportions(d, gene_id = "RBM7", group_variable = "group")
trans_counts %>% filter(gene_id=="RBM7")

plotProportions(d, gene_id = "RPF2", group_variable = "group")
trans_counts %>% filter(gene_id=="RPF2")

plotProportions(d, gene_id = "RBM7", group_variable = "group")
trans_counts %>% filter(gene_id=="RBM7")

plotProportions(d, gene_id = "ARHGDIB", group_variable = "group")
trans_counts %>% filter(gene_id=="ARHGDIB")


out <- trans_counts %>% left_join(res)

# write statistics to table
write.table(out, "08062023_DTU_gloria_pacbio.tsv", sep = "\t",
            row.names = FALSE, quote = FALSE)


```


